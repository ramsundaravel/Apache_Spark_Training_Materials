orders - 
order_id            	int                 	                    
order_date          	string              	                    
order_customer_id   	string              	                    
order_status        	string  


order_items
order_item_id       	int                 	                    
order_item_order_id 	int                 	                    
order_item_product_id	int                 	                    
order_item_quantity 	int                 	                    
order_item_subtotal 	float               	                    
order_item_product_price	float    

customer
customer_id         	int                 	                    
customer_fname      	varchar(255)        	                    
customer_lname      	varchar(255)        	                    
customer_email      	varchar(255)        	                    
customer_password   	varchar(50)         	                    
customer_street     	varchar(255)        	                    
customer_city       	varchar(45)         	                    
customer_state      	varchar(50)         	                    
customer_zipcode    	varchar(45)  

Get details of top 5 customers by revenue for each month
We need to get all the details of the customer along with month and revenue per month
Data need to be sorted by month in ascending order and revenue per month in descending order
Create table top5_customers_per_month in <YOUR_USER_ID>_retail_db_txt
Insert the output into the newly created table

pyspark --master yarn --num-executors 10


sqlContext.sql("use ramkarthik_ram_retaildb_txt")
sqlContext.setConf("spark.sql.shuffle.partitions","10")

result = sqlContext.sql("select mn,customer as customerid,round(revenue,2) as revenue,customer_name, \
dense_rank() over (partition by mn order by revenue desc) as rnk from ( \
select date_format(o.order_date,'YYYYMM') as mn,o.order_customer_id as customer, \
concat(c.customer_fname,' ',c.customer_lname) as customer_name, \
sum(oi.order_item_subtotal) as revenue from \
orders o inner join order_items oi \
on o.order_id = oi.order_item_id \
inner join customer c \
on c.customer_id = o.order_customer_id \
where lower(order_status) in ('closed','complete') \
group by date_format(o.order_date,'YYYYMM'),o.order_customer_id,concat(c.customer_fname, \
' ',c.customer_lname) \
)inx1 \
having rnk <=5 \
order by mn asc,rnk asc")

result.coalesce(1).write.format("orc").mode("overwrite").saveAsTable("ramkarthik_ram_retaildb_txt.top_by_monthly_customer")

result.coalesce(1).write.mode("overwrite").saveAsTable("ramkarthik_ram_retaildb_txt.top_by_monthly_customer1",format = "parquet")

result.coalesce(1).write.saveAsTable("ramkarthik_ram_retaildb_txt.top_by_monthly_customer56")

sqlContext.sql("select count(1) from ramkarthik_ram_retaildb_txt.top_by_monthly_customer")





